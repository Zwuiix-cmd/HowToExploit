import {RelaySession} from "../RelaySession";
import {BedrockPacket} from "../../protocol/packet/Packet";
import {existPacket} from "../../protocol/packet/PacketManager";
import {TextPacket} from "../../protocol/packet/list/TextPacket";

export class PacketHandler {
    constructor(relaySession: RelaySession) {
        let callable = (packet: BedrockPacket, des: object) => {
            console.log(packet.name);
            if(!existPacket(packet.name)) return;
            switch (packet.name) {
                case "text":
                    console.log(des)
                    if(!this.handleText(TextPacket.parse(packet.params))) {
                        //des.canceled;
                    }
                    break;
            }
        };
        relaySession.getPlayer().on("clientbound", callable);
        relaySession.getPlayer().on("serverbound", callable);
    }

    public handleText(packet: TextPacket): boolean
    {
        return true;
    }
}